---

services:
  cheetah.webapi:
    image: ${DOCKER_REGISTRY-}cheetahwebapi
    hostname: cheetahwebapi
    healthcheck:
      test: ["CMD", "curl", "-f", "http://cheetahwebapi:80/health"]
    build:
      context: ../
      dockerfile: dockerfiles/Dockerfile
      args:
        - projectFile=Cheetah.WebApi/Cheetah.WebApi.csproj
        - assemblyName=Cheetah.WebApi
      secrets:
        # Nuget restore outside Visual Studio
        - GITHUB_ACTOR
        - GITHUB_TOKEN
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      #- "ASPNETCORE_URLS=https://+:1851;http://+:1751"
      #- "ASPNETCORE_Kestrel__Certificates__Default__Password=password"
      #- "ASPNETCORE_Kestrel__Certificates__Default__Path=/root/.aspnet/https/aspnetapp.pfx"
      - "Prometheus__port=1861"
      - "OpenSearch__Url=http://opensearch:9200"

      - "Kafka__OAuth2__ClientId=default-access"
      - "Kafka__OAuth2__ClientSecret=default-access-secret"

      - "Kafka__Url=kafka:19092"

      - "KafkaProducerConfig__Topic=cheetahwebapi"
      - "KafkaConsumerConfig__Topic=cheetahwebapi"
      - "KafkaConsumerConfig__ConsumerName=cheetahwebapi"
    networks:
      - cheetah-infrastructure
    ports:
      - 1751:8080
      # - "1851:1851"
      - "1861:1861"
    #volumes:
    #  - "${APPDATA:-.}/ASP.NET/https:/root/.aspnet/https:ro"

networks:
  cheetah-infrastructure:
    external: true

secrets:
  GITHUB_TOKEN:
    environment: GITHUB_TOKEN
  GITHUB_ACTOR:
    environment: GITHUB_ACTOR
